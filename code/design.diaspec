import Twist as org.ros.message.geometry_msgs.Twist;#\label{design:import}#
structure Obstacle { isDetected as Boolean;#\label{design:obstacle-b}#
                     ranges as Float[]; }#\label{design:obstacle-e}#
enumeration RobotMode { RANDOM, EXPLORATION }
action OnOff {#\label{design:onoff-b}# #on#();#\label{design:on}# off();#\label{design:off}# }#\label{design:onoff-e}#
entity Light {#\label{design:light-b}# action OnOff;#\label{design:light-onoff}# }#\label{design:light-e}#
entity LaserScan {#\label{design:laserscan-b}#
  source ranges as Float[];#\label{design:laserscan-ranges}#
  action OnOff;#\label{design:laserscan-onoff}#
}#\label{design:laserscan-e}#
entity Exploration { source twist as Twist; }
entity ModeSelector { source mode as RobotMode; }
context ObstacleDetection as Obstacle {
  source ranges from LaserScan;
}
context ObstacleZone as Boolean {
  context ObstacleDetection;
}
context RandomMotion as Twist {#\label{design:randommotion-b}#
  context ObstacleDetection;
}
context Motion as Twist {
  source mode from ModeSelector;
  context RandomMotion;
  source twist from Exploration;
}
controller MotionController {
  context Motion;
  action TurnAndRoll on Wheel;
}
